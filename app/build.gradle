apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "me.manulorenzo.mapthecity"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        File localProperties = project.rootProject.file('local.properties')
        if (localProperties.exists()) {
            properties.load(localProperties.newDataInputStream())
        }

        def apikey = properties.getProperty('gmaps.v2.apikey')
        // Add your Google Maps v2 API key in local.properties as gmaps.v2.apikey=...
        manifestPlaceholders = [ gmapsV2ApiKey:apikey ]
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android.sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }
}

allOpen {
    annotation("me.manulorenzo.mapthecity.data.source.Mockable")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta4"
    implementation 'com.google.code.gson:gson:2.8.6'
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0-rc03"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc03"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    // Testing
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:rules:1.3.0-alpha03'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
}
